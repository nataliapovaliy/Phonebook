{"version":3,"file":"static/js/412.fe9785b2.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectorContacts.js","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/App.module.css?6c4d","pages/Phonebook/Phonebook.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","export const selectItems = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;","import css from '../ContactForm/ContactForm.module.css';\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operationsContacts';\nimport { selectItems } from '../../redux/contacts/selectorContacts';\n\n\nconst ContactForm = () => {\n    const dispatch = useDispatch();\n    const contacts  = useSelector (selectItems);\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    \n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        if (name === 'name') setName(value);\n        else setNumber(value);\n    }\n\n    const handleInput = (event) => {\n        console.log('event', event.target[0].value);\n        event.preventDefault();\n        const dublicate = contacts.find(contact => contact.name.toLowerCase() === event.target[0].value.toLowerCase());\n        if (dublicate) { return alert(`${event.name} is already in contacts`); }\n\n        dispatch(addContact({\n            name,\n            number,}));\n        reset();\n    }\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    }\n\n        return (\n            <form className={css.form} onSubmit={handleInput}>\n                <label className={css.label}>\n                    Name\n                    <input\n                        className={css.input}\n                        type=\"text\"\n                        name=\"name\"\n                        value={name}\n                        onChange={handleChange}\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    />\n                </label>\n                <label className={css.label}>\n                    Number\n                    <input\n                        className={css.input}\n                        type=\"tel\"\n                        name=\"number\"\n                        value={number}\n                        onChange={handleChange}\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                    />\n                </label>\n                <button className={css.btn} type=\"submit\">Add Contacts</button>\n            </form>\n        )\n}\n\nexport default ContactForm","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"Contact_contact__4zmlP\",\"btn\":\"Contact_btn__JzanX\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport css from '../Contact/Contact.module.css';\nimport { delContact } from '../../redux/contacts/operationsContacts';\n\nexport function Contact({ name, number, id }) {\n    const dispatch = useDispatch();\n    // const deleteContact = delContact();\n\n    return (\n            <div className={css.contact}>\n                <p>{name}: {number}</p>\n                <button className={css.btn} type=\"button\" onClick={() => dispatch(delContact(id))}>Delete</button>\n            </div>\n    )\n}\n\nContact.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    // deleteContact: PropTypes.func.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Contact } from '../Contact/Contact';\nimport css from '../ContactList/ContactList.module.css';\nimport { fetchContacts } from '../../redux/contacts/operationsContacts';\n\n\nexport function ContactList({contacts}) {\n    const dispatch = useDispatch();\n\nuseEffect (() => {\n    dispatch(fetchContacts());\n}, [dispatch]);\n\n    return (\n        <ul className={css.list}>\n            {contacts.map(({id, name, number}) => {\n                return (\n                    <li key={id}>\n                        <Contact\n                            name={name}\n                            number={number}\n                            id={id}\n                        />\n                    </li>\n                )}\n            )}\n        </ul>\n    )\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n        })\n    ),\n};","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch, useSelector } from 'react-redux';\nimport css from '../Filter/Filter.module.css';\nimport { selectFilter } from '../../redux/contacts/selectorContacts';\nimport { filterSlice } from '../../redux/contacts/sliceFilter';\n\nexport function Filter() {\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    const changeFilter = event => {\n        dispatch(filterSlice(event.target.value))\n    }\n    \n    return (\n        <>\n            <div className={css.filter}>\n                <label className={css.label}>\n                    Find contacts by name\n                    <input\n                        className={css.input}\n                        type=\"text\"\n                        name=\"contacts\"\n                        value={filter}\n                        onChange={changeFilter}\n                        required\n                    />\n                </label>\n        </div>\n        </>\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"App_phonebook__9tIMG\",\"title\":\"App_title__Xrt9W\"};","import ContactForm from '../../components/ContactForm/ContactForm';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport css from '../../components/App.module.css';\nimport { useSelector } from 'react-redux';\nimport { selectItems, selectIsLoading, selectError, selectFilter } from '../../redux/contacts/selectorContacts';\n\nconst Phonebook = () => {\n    const contacts  = useSelector(selectItems);\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n    const filter = useSelector(selectFilter);\n\n    const checkContact = () => {\n    if (!filter) return contacts;\n        const checkFilter = filter?.toLowerCase();\n        return contacts.filter(contact => contact.name.toLowerCase().includes(checkFilter));\n    }\n        return (\n            <div className={css.phonebook}>\n                <h1 className={css.title}>Phonebook</h1>\n\n                <ContactForm />\n\n                <h2 className={css.title}>Contacts</h2>\n\n                <Filter />\n\n                {isLoading && <p>Loading contacts...</p>}\n                {error && <p>{error}</p>}\n\n                <ContactList contacts={checkContact()}/>\n                \n            </div>\n    )\n}\n\nexport default Phonebook"],"names":["selectItems","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","dispatch","useDispatch","useSelector","useState","name","setName","number","setNumber","handleChange","event","target","value","reset","className","css","onSubmit","console","log","preventDefault","find","contact","toLowerCase","alert","addContact","type","onChange","pattern","title","required","Contact","id","onClick","delContact","ContactList","useEffect","fetchContacts","map","Filter","filterSlice","checkFilter","includes","checkContact"],"sourceRoot":""}