{"version":3,"file":"static/js/815.95feaccd.chunk.js","mappings":"2SAOaA,EAAe,WACxB,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAGXC,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACD,aAATD,EAAqBT,EAAYU,GACnB,UAATD,EAAkBP,EAASQ,GAC/BN,EAAYM,EACpB,EAwCD,OACI,UAAC,KAAD,CAAKC,MAAM,QAAX,WACI,SAAC,IAAD,CAASC,EAAG,CAAC,EAAG,GAAIC,SAAU,GAA9B,oCACA,kBAAOC,aAAa,MAApB,WACA,UAAC,IAAD,CAAOC,QAAS,EAAGC,GAAI,EAAIF,aAAa,MAAxC,WAEI,SAAC,EAAAG,EAAD,CAAOC,UAAU,OAAOC,QAAQ,KAAKC,OAAO,MAAMC,YAAY,UAAUC,EAAE,IACtEC,YAAY,kBACZC,SAAUjB,EAAcG,MAAOX,EAC/B0B,KAAK,OAAOhB,KAAK,cAErB,SAAC,EAAAQ,EAAD,CAAOC,UAAU,OAAOC,QAAQ,KAAKC,OAAO,MAAMC,YAAY,UAAUC,EAAE,IACtEC,YAAY,2BACZC,SAAUjB,EAAcG,MAAOT,EAC/BwB,KAAK,QAAQhB,KAAK,WAEtB,SAAC,EAAAQ,EAAD,CAAOC,UAAU,OAAOC,QAAQ,KAAKC,OAAO,MAAMC,YAAY,UAAUC,EAAE,IACtEC,YAAY,yBACZC,SAAUjB,EAAcG,MAAOP,EAC/BsB,KAAK,WAAWhB,KAAK,iBAG7B,SAAC,IAAD,CAAQiB,QA5DK,SAACC,GAClBA,EAAMC,iBACNvB,GACQwB,EAAAA,EAAAA,IAAa,CACbpB,KAAMV,EACNE,MAAAA,EACAE,SAAAA,KAEF2B,SACDC,MAAK,WACFC,EAAAA,OAAAA,QAAe,0BAClB,IACCC,OAAM,SAAAC,GAAUF,EAAAA,OAAAA,QAAA,UAAkBE,GAAS,GAwBpD,EAwBsCC,YAAY,OAAOC,QAAQ,QAAQxB,EAAG,CAAC,EAAG,GAAIa,KAAK,SAAlF,2BAKX,EC1ED,EAVqB,WACjB,OACI,+BAEA,SAAC5B,EAAD,KAIP,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { registerUser } from '../../redux/auth/auth-services';\nimport { Input, Stack, Button, Box, Heading } from '@chakra-ui/react';\nimport { useDispatch } from \"react-redux\";\n// import { selectErrorAuth } from \"../../redux/auth/selectorAuth\"\n\nexport const RegisterForm = () => {\n    const [userName, setUserName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    // const errorAuth = useSelector(selectErrorAuth);\n    const dispatch = useDispatch();\n\n\n    const handleChange = ({ target }) => {\n        const { name, value } = target;\n        if (name === 'userName') setUserName(value);\n        else if (name === 'email') setEmail(value);\n        else setPassword(value);\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        dispatch(\n                registerUser({\n                name: userName,\n                email,\n                password,\n                })\n            ).unwrap()\n            .then(() => {\n                Notify.success('Create user succesfully');\n            }\n            ).catch(error => {Notify.failure(`${error}`)})\n\n\n        // dispatch(\n        //     registerUser({\n        //     name: userName,\n        //     email,\n        //     password,\n        //     })\n        // ).unwrap()\n        //     .then(() => {\n        //     errorAuth ? Notify.failure(`${errorAuth}`) : Notify.success('Create user succesfully')\n        //     })\n        \n        // dispatch(\n        //     registerUser({\n        //         name: userName,\n        //         email,\n        //         password,\n        //     }),\n        //     errorAuth ? Notify.failure(`${errorAuth}`) : Notify.success('Create user succesfully')\n        // )\n            \n            \n    }\n\n    return (\n        <Box width=\"400px\" >\n            <Heading m={[3, 4]} fontSize={22}>Register on Phonebook</Heading>\n            <form  autoComplete=\"off\">\n            <Stack spacing={3} ml={4}  autoComplete=\"off\">\n\n                <Input boxShadow='base' rounded='md' border='1px' borderColor='#C1C1C1' p='2'\n                    placeholder='Enter your Name'\n                    onChange={handleChange} value={userName} \n                    type=\"text\" name=\"userName\" />\n                    \n                <Input boxShadow='base' rounded='md' border='1px' borderColor='#C1C1C1' p='2'\n                    placeholder='Email: example@gmail.com'\n                    onChange={handleChange} value={email} \n                    type=\"email\" name=\"email\" />\n                    \n                <Input boxShadow='base' rounded='md' border='1px' borderColor='#C1C1C1' p='2'\n                    placeholder='Password: min 8 simbol'\n                    onChange={handleChange} value={password} \n                    type=\"password\" name=\"password\" />\n            </Stack>\n\n            <Button onClick={handleSubmit} colorScheme='teal' variant='solid' m={[3, 4]} type=\"submit\">\n                Register</Button >\n            </form>\n        </Box>\n    );\n}\n","import React from \"react\";\nimport { RegisterForm } from '../../components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n    return (\n        <>\n        {/* <h2>Form for registration</h2> */}\n        <RegisterForm />\n        </>\n        \n    )\n}\n\nexport default RegisterPage"],"names":["RegisterForm","useState","userName","setUserName","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","target","name","value","width","m","fontSize","autoComplete","spacing","ml","I","boxShadow","rounded","border","borderColor","p","placeholder","onChange","type","onClick","event","preventDefault","registerUser","unwrap","then","Notify","catch","error","colorScheme","variant"],"sourceRoot":""}